#!/usr/bin/env python3
import socket
import sys

# Method used to retrieeve the log in cookie that will help us stay logged in.
def getCookie():
  # Setting up the connection.
  HOST = 'webcrawler-site.ccs.neu.edu'
  PORT = 80
  client = socket.socket( socket.AF_INET, socket.SOCK_STREAM)
  client.connect(( HOST, PORT ))

  # Retrieve csrf token from the current login page.
  GET_REQUEST = (f"GET /accounts/login/ HTTP/1.0\r\nHost:webcrawler-site.ccs.neu.edu\r\n\r\n".encode('utf-8'))
  client.sendall(GET_REQUEST)
  response = bytes.decode(client.recv(1750))
  response2 = bytes.decode(client.recv(970))
  print("response 1", response)
  print("response 2", response2)
  index1 = response.index("csrf")
  index2 = response2.index("csrf")
  #print("index 1", index1)
  #print("index 2", index2)
  #token from header
  csrfToken1 = response[index1+10:index1+74]
  #token from body
  csrfToken2 = response2[index2+28:index2+92]
  #print("GET, ", response, response2)
  #print("csrfToken, ", csrfToken1, csrfToken2)

  # Post request with the current csrf token to sign into fakebook.
  usernamePass = "username=bolger.i&password=FWCOZKT0LHX2US5R"
  POST_REQUEST = (f"POST /accounts/login/ HTTP/1.0\r\n"
  "Host: webcrawler-site.ccs.neu.edu\r\n"
  "Content-Length: 798\r\n"
  "Connection: keep-alive\r\n"
  "Content-Type: application/x-www-form-urlencoded\r\n"
  "Referer: http://webcrawler-site.ccs.neu.edu/accounts/login/\r\n"
  "Cookie: " + "csrftoken=" + str(csrfToken1) + "\r\n"
  #identity/n/
  "Accept-Encoding: " + usernamePass + "&csrfmiddlewaretoken=" + str(csrfToken2) + "&next=/Fakebook/\r\n").encode('ascii')
  #"Origin: http://webcrawler-site.ccs.neu.edu\r\n"
  #"Accept-Language: en-us\r\n"
  #"\r\n"
  #"id_username=bolger.i&id_password=FWCOZKT0LHX2US5R&csrfmiddlewaretoken=" + csrfToken2 + "\r\n").encode('utf-8')
  client.sendall(POST_REQUEST)
  response3 = bytes.decode(client.recv(4096))
  print("response3 ", response3)
 
# Main method for this webcrawler. 
# Get cookie, start searching for links and flags, maintain queue of valid links left to explore, print out found flags.
def main():
  getCookie()
  
if __name__ == "__main__":
  # Command line specification enforcing.
  if not(len(sys.argv) == 3):
    sys.exit("Usage: ./webcrawler [username] [password]")
  # Call the main method.
  main()
