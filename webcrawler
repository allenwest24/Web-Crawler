#!/usr/bin/env python3
import socket
import sys

# Method used to retrieeve the log in cookie that will help us stay logged in.
def getCookie():
  # Setting up the connection.
  HOST = 'webcrawler-site.ccs.neu.edu'
  PORT = 80
  client = socket.socket( socket.AF_INET, socket.SOCK_STREAM)
  client.connect(( HOST, PORT ))

  # Retrieve csrf token from the current login page.
  GET_REQUEST = (f"GET /accounts/login/ HTTP/1.1\r\nHost:webcrawler-site.ccs.neu.edu\r\n\r\n".encode('utf-8'))
  client.sendall(GET_REQUEST)
  # Get the GET response.
  response = bytes.decode(client.recv(4096))
  # Find csrftoken lcoated in header.
  index1 = response.index("csrftoken")
  # Find csrftoken in body.
  index2 = response.index("csrfmiddlewaretoken")
  # CSRFToken pulled from header of initial GET request.
  csrfToken1 = response[index1+10:index1+74]
  # CSRFToken pulled from the hidden csrfmiddlewaretoken field in body of initial GET request.
  csrfToken2 = response[index2+28:index2+92]

  # Forge the POST request with the current csrf token to sign into fakebook.
  usernamePass = "username=" + sys.argv[1] + "&password=" + sys.argv[2]
  payload = "" + usernamePass + "&csrfmiddlewaretoken=" + csrfToken2 + "&next=\r\n"
  POST_REQUEST = (f"POST /accounts/login/ HTTP/1.1\r\n"
  "Host: webcrawler-site.ccs.neu.edu\r\n"
  "Accept-Encoding: gzip, deflate\r\n"
  "Referer: http://webcrawler-site.ccs.neu.edu/accounts/login/\r\n"
  "Content-Type: application/x-www-form-urlencoded\r\n"
  "Content-Length: " + str(len(payload)) + "\r\n"
  "Origin: http://webcrawler-site.ccs.neu.edu\r\n"
  "Connection: keep-alive\r\n"
  "Cookie: csrftoken=" + csrfToken1 + "\r\n"
  "Upgrade-Insecure-Requests: 1\r\n"
  "\r\n"
  + payload + "\r\n")
  POST_REQUEST = POST_REQUEST.encode('ascii')

  # Send the Post request.
  client.sendall(POST_REQUEST)
  postResponse = bytes.decode(client.recv(4096))
  print("POST response:", postResponse)
 
# Main method for this webcrawler. 
# Get cookie, start searching for links and flags, maintain queue of valid links left to explore, print out found flags.
def main():
  getCookie()
  
if __name__ == "__main__":
  # Command line specification enforcing.
  if not(len(sys.argv) == 3):
    sys.exit("Usage: ./webcrawler [username] [password]")
  # Call the main method.
  main()
